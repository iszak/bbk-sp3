1.
(a) Briefly describe the Strategy Design Pattern?
The strategy pattern is when you have a group of different implementations that need to be changed interchangably within that group.

(b) When is it appropriate to use the Strategy Design Pattern?
See above?


3. When is it appropriate to use the Abstract Factory design pattern?
When you want to decouple the interface to create a class from the interface of the created class such that you can easily implement a new factory or replace it and still receive back a class which conforms to your expectations (see polymorphism, liskov substitution principle)
